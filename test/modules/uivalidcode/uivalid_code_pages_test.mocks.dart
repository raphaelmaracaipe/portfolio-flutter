// Mocks generated by Mockito 5.4.2 from annotations
// in portfolio_flutter/test/modules/uivalidcode/uivalid_code_pages_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:portfolio_flutter/modules/core/data/network/request/request_user_code.dart'
    as _i5;
import 'package:portfolio_flutter/modules/core/data/network/response/response_valid_code.dart'
    as _i2;

import 'uivalid_code_pages_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponseValidCode_0 extends _i1.SmartFake
    implements _i2.ResponseValidCode {
  _FakeResponseValidCode_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepositoryMock].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepositoryMock extends _i1.Mock
    implements _i3.UserRepositoryMock {
  MockUserRepositoryMock() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> requestCode(_i5.RequestUserCode? requestUserCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestCode,
          [requestUserCode],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i2.ResponseValidCode> requestValidCode(String? code) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestValidCode,
          [code],
        ),
        returnValue:
            _i4.Future<_i2.ResponseValidCode>.value(_FakeResponseValidCode_0(
          this,
          Invocation.method(
            #requestValidCode,
            [code],
          ),
        )),
      ) as _i4.Future<_i2.ResponseValidCode>);
}
